#version 450

in vec2 fTexcoord;

out vec4 fragColor;

uniform sampler2D Texture;
uniform vec4 Color = vec4(1.0f, 1.0f, 1.0f, 1.0f);

uniform vec2 Direction = vec2(1.0, 0.0);


const float weights17[17] = {0.014076, 0.022439, 0.033613, 0.047318, 0.062595, 0.077812, 0.090898, 0.099783, 0.102934, 0.099783, 0.090898, 0.077812, 0.062595, 0.047318, 0.033613, 0.022439, 0.014076};

const float weights63[63] = {0.000328, 0.000445, 0.000598, 0.000795, 0.001047, 0.001364, 0.00176, 0.002248,	0.002842, 0.003559, 0.004412, 0.005415,	0.006579, 0.007915,	0.009428, 0.011117, 0.01298, 0.015003, 0.01717, 0.019454, 0.021823, 0.024237, 0.02665, 0.029012, 0.03127, 0.033368, 0.035253, 0.036874, 0.038187, 0.039153, 0.039744, 0.039943, 0.039744, 0.039153, 0.038187, 0.036874, 0.035253, 0.033368, 0.03127, 0.029012, 0.02665, 0.024237, 0.021823, 0.019454, 0.01717, 0.015003, 0.01298, 0.011117, 0.009428, 0.007915, 0.006579, 0.005415, 0.004412, 0.003559, 0.002842, 0.002248, 0.00176, 0.001364, 0.001047, 0.000795, 0.000598, 0.000445, 0.000328};

const float weights5[5] = {0.06136,	0.24477,	0.38774,	0.24477,	0.06136};

const float weights7[7] = {0.071303,	0.131514,	0.189879,	0.214607,	0.189879,	0.131514,	0.071303};

void main()
{

	vec2 resolution = textureSize(Texture, 0);
	
	vec3 color = vec3(0.0);


	for (int i = -31; i <= 31; i++)
	{
		color += texture2D(Texture, fTexcoord - (vec2(float(i)) * Direction / resolution)).rgb * weights63[i + 31];
	}

	fragColor = vec4(color, 1.0);
}